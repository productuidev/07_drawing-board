{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["console.log('그림판');\r\n\r\nclass DrawingBoard {\r\n  MODE = 'NONE'; // 브러시 모드 : NONE BRUSH ERASER\r\n  IsMouseDown = false; // T/F\r\n\r\n  constructor() {\r\n    this.assignElement();\r\n    this.initContext();\r\n    this.addEvent();\r\n  }\r\n\r\n  assignElement() {\r\n    this.containerEl = document.getElementById('container');\r\n    this.canvasEl = this.containerEl.querySelector('#canvas');\r\n    this.toolbarEl = this.containerEl.querySelector('#toolbar');\r\n    this.brushEl = this.containerEl.querySelector('#brush');\r\n  }\r\n\r\n  // 2D 캔버스 구현\r\n  initContext() {\r\n    this.context = this.canvasEl.getContext('2d');\r\n  }\r\n\r\n  addEvent() {\r\n    this.brushEl.addEventListener('click', this.onClickBrush.bind(this));\r\n    this.canvasEl.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n    this.canvasEl.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n    this.canvasEl.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n  }\r\n\r\n  // 마우스를 누를 때\r\n  onMouseDown(event) {\r\n    if (this.MODE === 'NONE') return;\r\n    this.IsMouseDown = true;\r\n    const currentPosition = this.getMousePosition(event);\r\n\r\n    // 2D 캔버스 그리기\r\n    this.context.beginPath(); // 경로 시작\r\n    this.context.moveTo(currentPosition.x, currentPosition.y); // 현재 좌표로 이동\r\n    this.context.lineCap = 'round'; // 펜팁\r\n    this.context.strokeStyle = '#000000'; // 선 색상\r\n    this.context.lineWidth = 10; // 두께\r\n    // this.context.lineTo(400, 400); // 캔버스 기준 x:400, y:400\r\n    // this.context.stroke(); // 그리기\r\n  }\r\n\r\n  // 마우스를 움직일 때\r\n  onMouseMove(event) {\r\n    if (!this.IsMouseDown) return; // 마우스를 누른 게 아니면 진입 불가 (반환)\r\n\r\n    const currentPosition = this.getMousePosition(event);\r\n    this.context.lineTo(currentPosition.x, currentPosition.y); // 현재 좌표로 이동\r\n    this.context.stroke(); // 그리기\r\n  }\r\n\r\n  // 마우스를 뗐을 때 = 마우스를 누른 게 아닌 상태\r\n  onMouseUp() {\r\n    if (this.MODE === 'NONE') return; // 브러시 모드가 NONE이면 진입 불가 (반환)\r\n    this.IsMouseDown = false;\r\n  }\r\n\r\n  // 마우스 좌표\r\n  getMousePosition(event) {\r\n    const boundaries = this.canvasEl.getBoundingClientRect(); // 좌표 값 구하기\r\n    return {\r\n      x: event.clientX - boundaries.left, // 현재 캔버스기준 가로 시작점 부터 엘리먼트 왼쪽변 까지의 거리\r\n      y: event.clientY - boundaries.top, // 현재 캔버스기준 세로 시작점 부터 엘리먼트 윗변 까지의 거리\r\n    };\r\n  }\r\n\r\n  // 브러시를 클릭했을 때 이벤트 핸들러\r\n  // 브러시를 눌렀을 때 상태 변경\r\n  // (공통) 툴 클릭 시 active 클래스 추가 (활성화 상태)\r\n  onClickBrush(event) {\r\n    // this.MODE = 'BRUSH';\r\n\r\n    const IsActive = event.currentTarget.classList.contains('active'); // 반복 코드 정리\r\n\r\n    this.MODE = IsActive ? 'NONE' : 'BRUSH';\r\n    this.canvasEl.style.cursor = IsActive ? 'default' : 'crosshair';\r\n\r\n    this.brushEl.classList.toggle('active');\r\n  }\r\n}\r\n\r\n// 인스턴스 생성\r\nnew DrawingBoard();\r\n"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}