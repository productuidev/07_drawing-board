{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["console.log('그림판');\r\n\r\nclass DrawingBoard {\r\n  MODE = 'NONE'; // 브러시 모드 : NONE BRUSH ERASER\r\n  IsMouseDown = false; // T/F\r\n  eraserColor = '#FFFFFF'; // 지우개 변수\r\n  backgroundColor = '#FFFFFF'; // 배경색 변수\r\n\r\n  constructor() {\r\n    this.assignElement();\r\n    this.initContext();\r\n    this.initCanvasBackgroundColor();\r\n    this.addEvent();\r\n  }\r\n\r\n  assignElement() {\r\n    this.containerEl = document.getElementById('container');\r\n    this.canvasEl = this.containerEl.querySelector('#canvas');\r\n    this.toolbarEl = this.containerEl.querySelector('#toolbar');\r\n    this.brushEl = this.toolbarEl.querySelector('#brush');\r\n    this.colorPickerEl = this.toolbarEl.querySelector('#colorPicker');\r\n    this.brushPanelEl = this.containerEl.querySelector('#brushPanel');\r\n    this.brushSliderEl = this.brushPanelEl.querySelector('#brushSize');\r\n    this.brushSizePreviewEl =\r\n      this.brushPanelEl.querySelector('#brushSizePreview');\r\n    this.eraserEl = this.toolbarEl.querySelector('#eraser');\r\n    this.navigatorEl = this.toolbarEl.querySelector('#navigator');\r\n    this.navigatorImageContainerEl = this.containerEl.querySelector('#imgNav');\r\n    this.navigatorImageEl = this.containerEl.querySelector('#canvasImg');\r\n  }\r\n\r\n  // 2D 캔버스 구현\r\n  initContext() {\r\n    this.context = this.canvasEl.getContext('2d');\r\n  }\r\n\r\n  // 캔버스 초기화 (초기화 시 캔버스 크기만큼의 직사각형을 그리고 시작하는 개념)\r\n  initCanvasBackgroundColor() {\r\n    this.context.fillStyle = this.backgroundColor;\r\n    this.context.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height); // fillRect(직사각형 그리기) : 캔버스 기준 0,0 좌표가 시작되는 지점, 캔버스의 너비, 캔버스 높이\r\n  }\r\n\r\n  addEvent() {\r\n    this.brushEl.addEventListener('click', this.onClickBrush.bind(this));\r\n    this.canvasEl.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n    this.canvasEl.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n    this.canvasEl.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n    this.canvasEl.addEventListener('mouseout', this.onMouseOut.bind(this));\r\n    this.brushSliderEl.addEventListener(\r\n      'input',\r\n      this.onChangeBrushSize.bind(this),\r\n    );\r\n    this.colorPickerEl.addEventListener('input', this.onChangeColor.bind(this));\r\n    this.eraserEl.addEventListener('click', this.onClickEraser.bind(this));\r\n    this.navigatorEl.addEventListener(\r\n      'click',\r\n      this.onClickNavigator.bind(this),\r\n    );\r\n  }\r\n\r\n  onMouseOut() {\r\n    if (this.MODE === 'NONE') return; // 브러시 모드가 NONE이면 진입 불가 (반환)\r\n    this.IsMouseDown = false;\r\n    this.updateNavigator();\r\n  }\r\n\r\n  // 브러시 패널에 선택한 컬러피커의 색상 적용\r\n  onChangeColor(event) {\r\n    this.brushSizePreviewEl.style.backgroundColor = event.target.value;\r\n  }\r\n\r\n  // 브러시 패널에서 슬라이더로 브러시 사이즈 조정\r\n  onChangeBrushSize(event) {\r\n    this.brushSizePreviewEl.style.width = `${event.target.value}px`;\r\n    this.brushSizePreviewEl.style.height = `${event.target.value}px`;\r\n  }\r\n\r\n  // 마우스를 누를 때\r\n  onMouseDown(event) {\r\n    if (this.MODE === 'NONE') return; // 브러시 모드가 NONE이면 진입 불가 (반환)\r\n    this.IsMouseDown = true;\r\n    const currentPosition = this.getMousePosition(event);\r\n\r\n    // 2D 캔버스 그리기\r\n    this.context.beginPath(); // 경로 시작\r\n    this.context.moveTo(currentPosition.x, currentPosition.y); // 현재 좌표로 이동\r\n    this.context.lineCap = 'round'; // 펜팁\r\n\r\n    // this.context.strokeStyle = '#000000'; // 선 색상\r\n    // this.context.lineWidth = 10; // 두께\r\n    // this.context.lineTo(400, 400); // 캔버스 기준 x:400, y:400\r\n    // this.context.stroke(); // 그리기\r\n\r\n    // 조건문으로 변경\r\n    if (this.MODE === 'BRUSH') {\r\n      this.context.strokeStyle = this.colorPickerEl.value; // 컬러피커의 값\r\n      this.context.lineWidth = this.brushSliderEl.value; // 브러시슬라이더의 값\r\n    } else if (this.MODE === 'ERASER') {\r\n      // 지우개를 배경색(흰색)인 브러시로 덮는 개념이라고 보면 됨\r\n      this.context.strokeStyle = this.eraserColor;\r\n      this.context.lineWidth = 50;\r\n    }\r\n  }\r\n\r\n  // 마우스를 움직일 때\r\n  onMouseMove(event) {\r\n    if (!this.IsMouseDown) return; // 마우스를 누른 게 아니면 진입 불가 (반환)\r\n\r\n    const currentPosition = this.getMousePosition(event);\r\n    this.context.lineTo(currentPosition.x, currentPosition.y); // 현재 좌표로 이동\r\n    this.context.stroke(); // 그리기\r\n  }\r\n\r\n  // 마우스를 뗐을 때 = 마우스를 누른 게 아닌 상태\r\n  onMouseUp() {\r\n    if (this.MODE === 'NONE') return; // 브러시 모드가 NONE이면 진입 불가 (반환)\r\n    this.IsMouseDown = false;\r\n    this.updateNavigator();\r\n  }\r\n\r\n  // 마우스 좌표\r\n  getMousePosition(event) {\r\n    const boundaries = this.canvasEl.getBoundingClientRect(); // 좌표 값 구하기\r\n    return {\r\n      x: event.clientX - boundaries.left, // 현재 캔버스기준 가로 시작점 부터 엘리먼트 왼쪽변 까지의 거리\r\n      y: event.clientY - boundaries.top, // 현재 캔버스기준 세로 시작점 부터 엘리먼트 윗변 까지의 거리\r\n    };\r\n  }\r\n\r\n  // 브러시를 클릭했을 때 이벤트 핸들러\r\n  // 브러시를 눌렀을 때 상태 변경\r\n  // (공통) 툴 클릭 시 active 클래스 추가 (활성화 상태)\r\n  onClickBrush(event) {\r\n    // this.MODE = 'BRUSH';\r\n    const IsActive = event.currentTarget.classList.contains('active'); // 반복 코드 정리\r\n    this.MODE = IsActive ? 'NONE' : 'BRUSH';\r\n    this.canvasEl.style.cursor = IsActive ? 'default' : 'crosshair';\r\n    this.brushPanelEl.classList.toggle('hide'); // 브러시 패널 활성화\r\n    event.currentTarget.classList.toggle('active');\r\n    // this.brushEl.classList.toggle('active');\r\n    this.eraserEl.classList.remove('active');\r\n  }\r\n\r\n  // 지우개 기능 (브러시 기능 응용)\r\n  // 지우개를 눌렀을 때 상태 변경\r\n  onClickEraser() {\r\n    const IsActive = event.currentTarget.classList.contains('active');\r\n    this.MODE = IsActive ? 'NONE' : 'ERASER';\r\n    this.canvasEl.style.cursor = IsActive ? 'default' : 'crosshair';\r\n    this.brushPanelEl.classList.add('hide');\r\n    event.currentTarget.classList.toggle('active');\r\n    // this.eraserEl.classList.toggle('active');\r\n    this.brushEl.classList.remove('active');\r\n  }\r\n\r\n  // 네비게이터(미니맵)\r\n  onClickNavigator(event) {\r\n    event.currentTarget.classList.toggle('active');\r\n    this.navigatorImageContainerEl.classList.toggle('hide');\r\n    // console.log(this.canvasEl.toDataURL());\r\n    this.updateNavigator();\r\n  }\r\n\r\n  // 현재 캔버스 상태를 이미지 형태로 변환하여 canvasImg에 src 형태로 업데이트하여 네비게이터(미니맵)으로 보여줄 수 있다\r\n  // 단, 너무 자주 업데이트 시 버벅거리는 현상 > 마우스를 떼거나 밖으로 나갔을 때 업데이트\r\n  updateNavigator() {\r\n    this.navigatorImageEl.src = this.canvasEl.toDataURL();\r\n  }\r\n}\r\n\r\n// 인스턴스 생성\r\nnew DrawingBoard();\r\n"],"names":["console","log","DrawingBoard","MODE","IsMouseDown","eraserColor","backgroundColor","constructor","this","assignElement","initContext","initCanvasBackgroundColor","addEvent","containerEl","document","getElementById","canvasEl","querySelector","toolbarEl","brushEl","colorPickerEl","brushPanelEl","brushSliderEl","brushSizePreviewEl","eraserEl","navigatorEl","navigatorImageContainerEl","navigatorImageEl","context","getContext","fillStyle","fillRect","width","height","addEventListener","onClickBrush","bind","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onChangeBrushSize","onChangeColor","onClickEraser","onClickNavigator","updateNavigator","event1","style","target","value","currentPosition","getMousePosition","beginPath","moveTo","x","y","lineCap","strokeStyle","lineWidth","lineTo","stroke","boundaries","getBoundingClientRect","clientX","left","clientY","top","IsActive","currentTarget","classList","contains","cursor","toggle","remove","event","add","src","toDataURL"],"version":3,"file":"index.2054982a.js.map"}